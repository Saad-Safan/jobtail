{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nlet DashboardComponent = class DashboardComponent {\n  constructor(auth, modalService, doc, Document) {\n    this.auth = auth;\n    this.modalService = modalService;\n    this.doc = doc;\n    // TODO: Replace with actual data\n    // Hook up to MongoDB\n    this.wishlistJobs = [];\n    this.appliedJobs = [];\n    this.interviewJobs = [];\n    this.offerJobs = [];\n    this.declinedJobs = [];\n    this.modalService = modalService;\n  }\n  open(modal) {\n    this.modalService.open(modal);\n  }\n  handleLogout() {\n    this.auth.logout({\n      returnTo: this.doc.location.origin\n    });\n  }\n  addNewJob() {}\n  drop(event) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n    }\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n}), __param(2, Inject(DOCUMENT))], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,eAAe;AACjD,SAASC,QAAQ,QAAQ,iBAAiB;AAE1C,SAAsBC,eAAe,EAAEC,iBAAiB,QAAQ,wBAAwB;AAQjF,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAE7BC,YAAmBC,IAAiB,EAAUC,YAAsB,EAA4BC,GAAG,EAACC,QAAQ;IAAzF,SAAI,GAAJH,IAAI;IAAuB,iBAAY,GAAZC,YAAY;IAAsC,QAAG,GAAHC,GAAG;IASnG;IACA;IACA,iBAAY,GAAU,EAAE;IACxB,gBAAW,GAAU,EAAE;IACvB,kBAAa,GAAU,EAAE;IACzB,cAAS,GAAU,EAAE;IACrB,iBAAY,GAAU,EAAE;IAdtB,IAAI,CAACD,YAAY,GAAGA,YAAY;EAElC;EAEOG,IAAI,CAACC,KAAU;IACpB,IAAI,CAACJ,YAAa,CAACG,IAAI,CAACC,KAAK,CAAC;EAChC;EAUAC,YAAY;IACV,IAAI,CAACN,IAAK,CAACO,MAAM,CAAC;MAAEC,QAAQ,EAAE,IAAI,CAACN,GAAI,CAACO,QAAQ,CAACC;IAAM,CAAE,CAAC;EAC5D;EAEAC,SAAS,IAET;EAEAC,IAAI,CAACC,KAA4B;IAC/B,IAAIA,KAAK,CAACC,iBAAiB,KAAKD,KAAK,CAACE,SAAS,EAAE;MAC/CnB,eAAe,CAACiB,KAAK,CAACE,SAAS,CAACC,IAAI,EAAEH,KAAK,CAACI,aAAa,EAAEJ,KAAK,CAACK,YAAY,CAAC;KAC/E,MAAM;MACLrB,iBAAiB,CACfgB,KAAK,CAACC,iBAAiB,CAACE,IAAI,EAC5BH,KAAK,CAACE,SAAS,CAACC,IAAI,EACpBH,KAAK,CAACI,aAAa,EACnBJ,KAAK,CAACK,YAAY,CACnB;;EAGL;CAGD;AA1CYpB,kBAAkB,eAL9BL,SAAS,CAAC;EACT0B,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,EAGuEC,iBAAM,CAAC3B,QAAQ,CAAC,IAF5EG,kBAAkB,CA0C9B;SA1CYA,kBAAkB","names":["Component","Inject","DOCUMENT","moveItemInArray","transferArrayItem","DashboardComponent","constructor","auth","modalService","doc","Document","open","modal","handleLogout","logout","returnTo","location","origin","addNewJob","drop","event","previousContainer","container","data","previousIndex","currentIndex","selector","templateUrl","styleUrls","__param"],"sourceRoot":"","sources":["/Users/MainUser/Documents/GitHub/jobtail/src/app/dashboard/dashboard.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent {\n\n  constructor(public auth: AuthService, private modalService: NgbModal, @Inject(DOCUMENT) private doc Document) {\n    this.modalService = modalService;\n    \n  }\n\n  public open(modal: any): void {\n    this.modalService!.open(modal);\n  }\n\n  // TODO: Replace with actual data\n  // Hook up to MongoDB\n  wishlistJobs: any[] = [];\n  appliedJobs: any[] = [];\n  interviewJobs: any[] = [];\n  offerJobs: any[] = [];\n  declinedJobs: any[] = [];\n\n  handleLogout(): void {\n    this.auth!.logout({ returnTo: this.doc!.location.origin });\n  }\n\n  addNewJob(): void {\n\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex,\n      );\n    }\n\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}